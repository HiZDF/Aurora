<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzhpo.aurora.admin.mapper.BlogArticleMapper">

  <!--结果集映射-->
  <resultMap id="BaseResultMap" type="com.lzhpo.aurora.admin.entity.BlogArticle">
    <id column="blog_id"  property="blogId" />
    <result column="title" property="title" />
    <result column="cover_img" property="coverImg" />
    <result column="description" property="description" />
    <result column="tags" property="tags" />
    <result column="type" property="type" />
    <result column="create_date" property="createDate" />
    <result column="author" property="author" />
    <result column="content" property="content" />
  </resultMap>

  <!-- 添加博客 -->
  <insert id="addBlog" useGeneratedKeys="true" keyProperty="blogId">
    insert into blog_article(title, cover_img, description, tags, type, create_date, author, content)
    values(#{title},#{coverImg},#{description},#{tags},#{type},#{createDate},#{author},#{content})
  </insert>

  <!-- 更新博客 -->
  <update id="updateBlog">
    UPDATE blog_article
    SET title = #{title}, cover_img = #{coverImg}, content = #{content}, description = #{description}, tags = #{tags}, type = #{type} ,author = #{author}
    WHERE
        blog_id = #{blogId}
  </update>

  <!-- 删除博客单个 -->
  <delete id="delBlog">
    delete from blog_article where blog_id = #{blogId}
  </delete>

  <!-- 批量删除 -->
  <delete id="batchDelBlog">
    DELETE
    FROM
    blog_article
    WHERE
    blog_id IN
    <foreach collection="array" item="ids" open="(" close=")" separator=",">
      #{ids}
    </foreach>
  </delete>

  <!-- 查询总条数 -->
  <select id="count" resultType="java.lang.Integer">
    select count(blog_id) from blog_article
  </select>

  <!-- 分页查询 -->
  <select id="selectByLimit" resultMap="BaseResultMap">
    select blog_id, title, cover_img, description, tags, type, create_date, author, content
    from blog_article
    limit #{start},#{limit}
  </select>

  <!-- 根据博客内容模糊查询 -->
  <select id="selectByLikeContent" resultMap="BaseResultMap">
    SELECT
        blog_id,
        title,
        cover_img,
        description,
        tags,
        type,
        create_date,
        author,
        content
    FROM
        blog_article
    WHERE
        content LIKE concat('%',#{content},'%')
    limit #{start},#{limit}
  </select>

  <!-- 根据id查询 -->
  <select id="selectById" resultMap="BaseResultMap">
    select blog_id, title, cover_img, description, tags, type, create_date, author, content
    from blog_article
    where  blog_id = #{blogId}
  </select>

  <!-- 根据博客内容模糊查询的总条数 -->
  <select id="countByLikeContent" resultType="java.lang.Integer">
    select count(blog_id) from blog_article where content LIKE concat('%',#{content},'%')
  </select>

</mapper>